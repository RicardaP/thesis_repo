cat(rep("BYOB"), times=3))
cat(rep("#DIESMALWIRKLICH"), times=20))
cat(rep("#hauscamping"), times=10))
cat(rep("#trockenbaujurte"), times=10))
cat(rep("Geburtstagsnachfeier"), times=20))
cat(rep("#lebenwoandereUrlaubmachen"), times=10))
cat(rep("Sylvesterparty!"), times=30))
cat(rep("Gemütlichkeit"), times=20))
cat(rep("gezelligheid"), times=20))
cat(rep("#Sleepover"), times=20))
cat(rep("#Sleepover"), times=20)
cat(rep("#Sleepover", times=20))
cat(rep("Housewarming",
times=40))
cat(rep("Einweihungsparty", times=30))
cat(rep("oud&nieuw", times=50))
cat(rep("NYE", times=30))
cat(rep("Sylvesterparty!", times=30))
cat(rep("BYOB", times=3))
cat(rep("#DIESMALWIRKLICH", times=20))
cat(rep("#hauscamping", times=10))
cat(rep("#trockenbaujurte", times=10))
cat(rep("Geburtstagsnachfeier", times=20))
cat(rep("#lebenwoandereUrlaubmachen", times=10))
cat(rep("Sylvesterparty!", times=30))
cat(rep("Gemütlichkeit", times=20))
cat(rep("gezelligheid", times=20))
cat(rep("#Sleepover", times=20))
A <- { cat(rep("Housewarming",
times=40))
cat(rep("Einweihungsparty", times=30))
cat(rep("oud&nieuw", times=50))
cat(rep("NYE", times=30))
cat(rep("Sylvesterparty!", times=30))
cat(rep("BYOB", times=3))
cat(rep("#DIESMALWIRKLICH", times=20))
cat(rep("#hauscamping", times=10))
cat(rep("#trockenbaujurte", times=10))
cat(rep("Geburtstagsnachfeier", times=20))
cat(rep("#lebenwoandereUrlaubmachen", times=10))
cat(rep("Sylvesterparty!", times=30))
cat(rep("Gemütlichkeit", times=20))
cat(rep("gezelligheid", times=20))
cat(rep("#Sleepover", times=20))}
A
png(danimug.png)
png(downloads/danimug.png)
png("~/downloads/danimug.png")
cat("Do no make me use my statistician voice")
dev.off()
plot(cars)
png("~/downloads/danimug.png")
cat("Do not make me use my statistician voice")
dev.off()
png("/Users/ricci/Downloads/danimug.png")
cat("Do not make me use my statistician voice")
dev.off()
plot(cars)
plot(cars)
png("/Users/ricci/Downloads/danimug.png")
plot(cars)
cat(
"Do not make me use my statistician voice")
dev.off()
devtools::install_github("crsh/papaja")
library(devtools)
install.packages("devtools")
library(devtools)
devtools::install_github("crsh/papaja")
if(!"devtools" %in% rownames(installed.packages())) install.packages("devtools")
# Install the stable development verions from GitHub
devtools::install_github("crsh/papaja")
# Install the latest development snapshot from GitHub
devtools::install_github("crsh/papaja@devel")
source('~/.active-rstudio-document')
names
install.packages("formatR", repos = "http://cran.rstudio.com")
set.seed(36)
sample(LETTERS, 50)
LETTERS
X <- rnorm(100)
Y <- rnorm(100)
cor(X,Y)
library('MASS')
data = mvrnorm(n=samples, mu=c(0, 0), Sigma=matrix(c(1, r, r, 1), nrow=4), empirical=TRUE)
H = data[, 1]  # standard normal (mu=0, sd=1)
A = data[, 2]  # standard normal (mu=0, sd=1)
P = data[, 3]  # standard normal (mu=0, sd=1)
Y = data[, 4]  # standard normal (mu=0, sd=1)
H = data[, 1]  # standard normal (mu=0, sd=1)
data
ibrary('MASS')
data = mvrnorm(n=samples, mu=c(0, 0), Sigma=matrix(c(1, r, r, 1), nrow=2), empirical=TRUE)
X = data[, 1]  # standard normal (mu=0, sd=1)
Y = data[, 2]  # standard normal (mu=0, sd=1)
cor(X, Y)  # yay!
cor(X*0.01 + 42, Y*3 - 1)  # Linear transformations of X and Y won't change r.
library('MASS')
data = mvrnorm(n=samples, mu=c(0, 0), Sigma=matrix(c(1, r, r, 1), nrow=2), empirical=TRUE)
X = data[, 1]  # standard normal (mu=0, sd=1)
Y = data[, 2]  # standard normal (mu=0, sd=1)
cor(X, Y)  # yay!
cor(X*0.01 + 42, Y*3 - 1)  # Linear transformations of X and Y won't change r.
samples = 200
r = 0.83
library('MASS')
data = mvrnorm(n=samples, mu=c(0, 0), Sigma=matrix(c(1, r, r, 1), nrow=2), empirical=TRUE)
X = data[, 1]  # standard normal (mu=0, sd=1)
Y = data[, 2]  # standard normal (mu=0, sd=1)
cor(X, Y)  # yay!
cor(X*0.01 + 42, Y*3 - 1)  # Linear transformations of X and Y won't change r.
data = mvrnorm(n=samples, mu=c(0, 0), Sigma=matrix(c(1, r, r, 1), nrow=4), empirical=TRUE)
H = data[, 1]  # standard normal (mu=0, sd=1)
A = data[, 2]  # standard normal (mu=0, sd=1)
P = data[, 3]  # standard normal (mu=0, sd=1)
Y = data[, 4]  # standard normal (mu=0, sd=1)
###
samples = 4
data = mvrnorm(n=samples, mu=c(0, 0), Sigma=matrix(c(1, r, r, 1), nrow=4), empirical=TRUE)
H = data[, 1]  # standard normal (mu=0, sd=1)
A = data[, 2]  # standard normal (mu=0, sd=1)
P = data[, 3]  # standard normal (mu=0, sd=1)
Y = data[, 4]  # standard normal (mu=0, sd=1)
samples = 4
r = 0.83
library('MASS')
data = mvrnorm(n=samples, mu=c(0, 0), Sigma=matrix(c(1, r, r, 1), nrow=4), empirical=TRUE)
H = data[, 1]  # standard normal (mu=0, sd=1)
A = data[, 2]  # standard normal (mu=0, sd=1)
P = data[, 3]  # standard normal (mu=0, sd=1)
Y = data[, 4]  # standard normal (mu=0, sd=1)
data = mvrnorm(n=samples, mu=c(0, 0), Sigma=matrix(c(1, r, r, 1), nrow=2), empirical=TRUE)
str(data)
data = mvrnorm(n=samples, mu=c(0, 0), Sigma=matrix(c(1, r, r, 1), nrow=2), empirical=TRUE)
str(data)
data = mvrnorm(n=samples, mu=c(0, 0), Sigma=matrix(c(1, r, r, 1), nrow=4), empirical=TRUE)
str(data)
###
samples = 4
data = mvrnorm(n=4, mu=c(0, 0), Sigma=matrix(c(1, r, r, 1), nrow=4), empirical=TRUE)
data = mvrnorm(n=4, mu=c(0, 0), Sigma=matrix(c(1, r, r, 1), nrow=2), empirical=TRUE)
str(data)
?mvnrom
?mvrnrom
?mvrnorm
LETTERS[1:26]
LETTERS[c(8,1,15,15,25)]
LETTERS[c(8,1,16,16,25)]
LETTERS[c(2,4,1,25)]
LETTERS[c(5,9,11,14)]
LETTERS[c(5,9,11,15)]
install.packages("hexsticker")
install.packages("hexSticker")
library(hexSticker)
library(showtext)
font_add_google("Knewave", "knewave")
showtext_auto()
# The reprohack-graphic1.png was made in adobe illustrator (not currently in repo). The
# original fill colour was #18ba99 but was:
# a) too dark according to feedback &
# b) out of gamut for CMYK print so corrected
sticker(here::here("assets", "reprohack-graphic1.png"),
package="ReproHack", p_family = "knewave",
p_size=7, p_color = "#FFFFFF", p_y = 0.6,
s_x=1.0, #s_y=0.8,
s_width=0.7, s_y = 1.2,
l_y = 1.05, l_x = 0.9,
h_fill="#00cc99", h_color="#10735F",
#h_size = 3,
filename="hex/reprohack.png", spotlight = F, asp = 0.7679814,
dpi=2700)
# svg output. Not currently working very well as reading in the svg version of the
# artwork is super pixelated
sticker(here::here("assets", "reprohack-graphic.svg"),
package="ReproHack", p_family = "knewave",
p_size=7, p_color = "#FFFFFF", p_y = 0.6,
s_x=1.0, #s_y=0.8,
s_width=0.7, s_y = 1.2,
l_y = 1.05, l_x = 0.9,
h_fill="#18ba99", h_color="#10735F",
#h_size = 3,
filename="hex/reprohack.svg", spotlight = F, asp = 0.7679814,
dpi=2700)
library(showtext)
showtext_auto()
# The reprohack-graphic1.png was made in adobe illustrator (not currently in repo). The
# original fill colour was #18ba99 but was:
# a) too dark according to feedback &
# b) out of gamut for CMYK print so corrected
sticker(here::here("assets", "reprohack-graphic1.png"),
package="ReproHack", p_family = "knewave",
p_size=7, p_color = "#FFFFFF", p_y = 0.6,
s_x=1.0, #s_y=0.8,
s_width=0.7, s_y = 1.2,
l_y = 1.05, l_x = 0.9,
h_fill="#00cc99", h_color="#10735F",
#h_size = 3,
filename="hex/reprohack.png", spotlight = F, asp = 0.7679814,
dpi=2700)
install.packages("here")
read.csv
library(tidyverse)
# import data
if(!require("foreign")){
# install.packages("foreign")
library("foreign")
}
data <- read.spss(file = "HBSC2017_totaal0518.sav", to.data.frame=T, use.missings = T)
data <- data[data$VO==1, ] #only high school, gender norms not measured in primary schools
### recode factors sex and sexual orientation
# levels(data$v2): # 1=jongen, 2=meisje
# levels(data$v82) # 1=ik val op jongens, 2=ik val op meisjes
data$v2 <- as.numeric(data$v2)
data$v82 <- relevel(data$v82, "Ik val op meisjes") # make 1=ik val op meisjes, 2=ik val op jongens
data$v82 <- as.numeric(data$v82)
data$hetero <-  ifelse(data$v2==data$v82, 1, 2) #1=hetero, 2=not hetero or don't know
### TODO also recode all other factors that will be used in model, see below.
#lavaan ERROR: unordered factor(s) detected; make them numeric or ordered: v56_02 v56_06 v56_10 v56_13 v56_19 v56_03 v56_09 v56_14 v56_17 v91a v91b v91c v91d v91e schnivo v52
#class(data1[])
#class(data1$sdqpeer2)
num <- c(173:192, 256:260, 10, 160)
data[num] <- mutate_all(data[num], function(x) ordered(x))
levels(data$v52)  <- 0:10
data$v52 <- data$v52 %>% as.character %>% as.numeric
levels(data$psysomfr)<-0:4
data$psysomfr <- data$psysomfr %>% as.character %>% as.numeric
### assign sample
set.seed(115735)
data$sample <- sample(1:2, nrow(data), T, c(0.7, 0.3)) # 2 is holdout
data1 <- data[data$sample==1, ] # training + calibration
data2 <- data[data$sample==2, ] # test
### requirements
library("lavaan")
library("survey")
library("lavaan.survey")
### generate survey design object
svy.df<-svydesign(id=~data$respnr,
weights=~data$weegVO1, #VO1 bec no missing values as in weegtot?
data=data)
model_1 <- '
# latent variables
Int =~ v56_02 + v56_06 + v56_10 + v56_13 + v56_19   # SDQ-R emo
Ext =~ v56_03 + v56_09 + v56_14 + v56_17            # SDQ-R conduct
Gender_Norms  =~ v91a + v91b + v91c + v91d + v91e   # AWS-A
# manifest variables
gender =~ v2              # 1=jongen
sex_orientation =~ hetero # 1=hetero
migrant =~ etn
education =~ schnivo
family_constitution =~ vollgezin
SES =~ FAS_III
Life_satis =~ v52
# regressions
Int ~ Ext
Life_satis ~ Ext
Int ~ Life_satis
Gender_Norms ~ Int
Gender_Norms ~ Ext
Gender_Norms ~ Life_satis
# confounders
gender ~ Int
sex_orientation ~ Int
migrant ~ Int
education ~ Int
family_constitution ~ Int
SES ~ Int
gender ~ Ext
sex_orientation ~ Ext
migrant ~ Ext
education ~ Ext
family_constitution ~ Ext
SES ~ Ext
gender ~ Life_satis
sex_orientation ~ Life_satis
migrant ~ Life_satis
education ~ Life_satis
family_constitution ~ Life_satis
SES ~ Life_satis
gender ~ Gender_Norms
sex_orientation ~ Gender_Norms
migrant ~ Gender_Norms
education ~ Gender_Norms
family_constitution ~ Gender_Norms
SES ~ Gender_Norms
'
lavaan.fit <- sem(model_1,
data=data1,
sampling.weights = "weegVO1" )
summary(lavaan.fit,fit.measures=TRUE, standardized=TRUE)
# per gender
# plot
# TODO double check interpretation and that scores / factor levels etc are correct
### Linear regressions
###
Int0 <- lm(sdqem1 ~ etn + age + schnivo + vollgezin + FAS_III  + v2 + sc_houding_gender + v2*sc_houding_gender,
data = data1, weights = weegVO1,
method = "qr")
Int <- lm(sdqem1 ~ etn + age + schnivo + vollgezin + FAS_III + hetero + v2 + sc_houding_gender + v2*sc_houding_gender + v2*hetero,
data = data1, weights = weegVO1,
method = "qr")
Ext <- lm(sdqcon1 ~ etn + age + schnivo + vollgezin + FAS_III + hetero + v2 + sc_houding_gender + v2*sc_houding_gender + v2*hetero,
data = data1, weights = weegVO1,
method = "qr")
Tot <- lm(sdqtot1 ~ etn + age + schnivo + vollgezin + FAS_III + hetero + v2 + sc_houding_gender + v2*sc_houding_gender + v2*hetero,
data = data1, weights = weegVO1,
method = "qr")
LifeSat <- lm(v52 ~ etn + age + schnivo + vollgezin + FAS_III + hetero + v2 + sc_houding_gender + v2*sc_houding_gender + v2*hetero,
data = data1, weights = weegVO1,
method = "qr")
PsySom <- lm(psysomfr ~ etn + age + schnivo + vollgezin + FAS_III + hetero + v2 + sc_houding_gender + v2*sc_houding_gender + v2*hetero,
data = data1, weights = weegVO1,
method = "qr")
Int2 <- lm(sdqem1 ~ etn + age + schnivo + vollgezin + FAS_III + hetero + v2 + sc_houding_gender + sc_houding_gender^2 + v2*sc_houding_gender + v2*hetero,
data = data1, weights = weegVO1,
method = "qr")
Ext2 <- lm(sdqcon1 ~ etn + age + schnivo + vollgezin + FAS_III + hetero + v2 + sc_houding_gender + sc_houding_gender^2 + v2*sc_houding_gender + v2*hetero,
data = data1, weights = weegVO1,
method = "qr")
Peer <- lm(sdqpeer1 ~ etn + age + schnivo + vollgezin + FAS_III + hetero + v2 + sc_houding_gender + v2*sc_houding_gender + v2*hetero,
data = data1, weights = weegVO1,
method = "qr")
Hyp <- lm(sdqhyp1 ~ etn + age + schnivo + vollgezin + FAS_III + hetero + v2 + sc_houding_gender + v2*sc_houding_gender + v2*hetero,
data = data1, weights = weegVO1,
method = "qr")
summary(Int0)
summary(Int)
summary(Int2)
summary(Ext)
summary(Ext2)
summary(Tot)
summary(LifeSat)
summary(PsySom)
summary(data$sc_houding_gender)
str(data$hetero)
summary(Int)
summary(Ext)
summary(Peer)
summary(Hyp)
summary(Tot)
str(data$schnivo)
### TODO
# install.packages("corrr")
library(corrr)
library(ggplot2)
### install.packages("corrplot")
library(corrplot)
mcor <- cor(x = data1$sc_houding_gender, y = c(data1$age, data1$schnivo, data1$ ), use="complete.obs")
corrplot(mcor, tl.srt = 25)
names(data1[269:242])
###
Int <- lm(sdqem1 ~ etn + age + schnivo + vollgezin + FAS_III + hetero + v2 + sc_houding_gender + v2*sc_houding_gender + v2*hetero,
data = data1, weights = weegVO1,
method = "qr")
Ext <- lm(sdqcon1 ~ etn + age + schnivo + vollgezin + FAS_III + hetero + v2 + sc_houding_gender + v2*sc_houding_gender + v2*hetero,
data = data1, weights = weegVO1,
method = "qr")
Int_nomod <- lm(sdqem1 ~ etn + age + schnivo + vollgezin + FAS_III + hetero + v2 + sc_houding_gender,
data = data1, weights = weegVO1,
method = "qr")
Ext_nomod <- lm(sdqcon1 ~ etn + age + schnivo + vollgezin + FAS_III + hetero + v2 + sc_houding_gender,
data = data1, weights = weegVO1,
method = "qr")
Int00 <- lm(sdqem1 ~ v2 + sc_houding_gender + v2*sc_houding_gender,
data = data1, weights = weegVO1,
method = "qr")
summary(Int00)
###
Int <- lm(sdqem1 ~ etn + age + schnivo + vollgezin + FAS_III + hetero + v2 + sc_houding_gender + v2*sc_houding_gender,
data = data1, weights = weegVO1,
method = "qr")
Ext <- lm(sdqcon1 ~ etn + age + schnivo + vollgezin + FAS_III + hetero + v2 + sc_houding_gender + v2*sc_houding_gender + v2*hetero,
data = data1, weights = weegVO1,
method = "qr")
### Happiest kids order with support scales:
Int_A <- lm(sdqem1 ~ etn + age + schnivo + vollgezin + FAS_III + v2, data = data1, weights = weegVO1, method = "qr")
Int_B <- lm(sdqem1 ~ etn + age + schnivo + vollgezin + FAS_III + v2 + hetero + sc_houding_gender + v2*sc_houding_gender,   data = data1, weights = weegVO1, method = "qr")
Int_C <- lm(sdqem1 ~ etn + age + schnivo + vollgezin + FAS_III + v2 + hetero + sc_houding_gender + v2*sc_houding_gender + sc_steun_thuis + sc_steun_vriend + sc_sfeer_klas, data = data1, weights = weegVO1, method = "qr")
summary(Int_A)
summary(Int_B)
summary(Int_C)
Ext_A <- lm(sdqcon1 ~ etn + age + schnivo + vollgezin + FAS_III + v2, data = data1, weights = weegVO1, method = "qr")
Ext_B <- lm(sdqcon1 ~ etn + age + schnivo + vollgezin + FAS_III + v2 + hetero + sc_houding_gender + v2*sc_houding_gender,   data = data1, weights = weegVO1, method = "qr")
Ext_C <- lm(sdqcon1 ~ etn + age + schnivo + vollgezin + FAS_III + v2 + hetero + sc_houding_gender + v2*sc_houding_gender + sc_steun_thuis + sc_steun_vriend + sc_sfeer_klas, data = data1, weights = weegVO1, method = "qr")
summary(Ext_A)
summary(Ext_B)
summary(Ext_C)
LifeS_A <- lm(v52 ~ etn + age + schnivo + vollgezin + FAS_III + v2, data = data1, weights = weegVO1, method = "qr")
LifeS_B <- lm(v52 ~ etn + age + schnivo + vollgezin + FAS_III + v2 + hetero + sc_houding_gender + v2*sc_houding_gender,   data = data1, weights = weegVO1, method = "qr")
LifeS_C <- lm(v52 ~ etn + age + schnivo + vollgezin + FAS_III + v2 + hetero + sc_houding_gender + v2*sc_houding_gender + sc_steun_thuis + sc_steun_vriend + sc_sfeer_klas, data = data1, weights = weegVO1, method = "qr")
summary(LifeS_A)
summary(LifeS_B)
summary(LifeS_C)
### Happiest kids order with easy communication items scales:
Int_A2 <- lm(sdqem1 ~ etn + age + schnivo + vollgezin + FAS_III + v2, data = data1, weights = weegVO1, method = "qr")
Int_B2 <- lm(sdqem1 ~ etn + age + schnivo + vollgezin + FAS_III + v2 + hetero + sc_houding_gender + v2*sc_houding_gender,   data = data1, weights = weegVO1, method = "qr")
Int_C2 <- lm(sdqem1 ~ etn + age + schnivo + vollgezin + FAS_III + v2 + hetero + sc_houding_gender + v2*sc_houding_gender + v37_1 + v37_3 + v37_6, data = data1, weights = weegVO1, method = "qr")
summary(Int_A2)
summary(Int_B2)
summary(Int_C2)
Ext_A2 <- lm(sdqcon1 ~ etn + age + schnivo + vollgezin + FAS_III + v2, data = data1, weights = weegVO1, method = "qr")
Ext_B2 <- lm(sdqcon1 ~ etn + age + schnivo + vollgezin + FAS_III + v2 + hetero + sc_houding_gender + v2*sc_houding_gender,   data = data1, weights = weegVO1, method = "qr")
Ext_C2 <- lm(sdqcon1 ~ etn + age + schnivo + vollgezin + FAS_III + v2 + hetero + sc_houding_gender + v2*sc_houding_gender + v37_1 + v37_3 + v37_6, data = data1, weights = weegVO1, method = "qr")
summary(Ext_A2)
summary(Ext_B2)
summary(Ext_C2)
LifeS_A2 <- lm(v52 ~ etn + age + schnivo + vollgezin + FAS_III + v2, data = data1, weights = weegVO1, method = "qr")
LifeS_B2 <- lm(v52 ~ etn + age + schnivo + vollgezin + FAS_III + v2 + hetero + sc_houding_gender + v2*sc_houding_gender,   data = data1, weights = weegVO1, method = "qr")
LifeS_C2 <- lm(v52 ~ etn + age + schnivo + vollgezin + FAS_III + v2 + hetero + sc_houding_gender + v2*sc_houding_gender + v37_1 + v37_3 + v37_6, data = data1, weights = weegVO1, method = "qr")
summary(LifeS_A2)
summary(LifeS_B2)
summary(LifeS_C2)
plot()
### plots
###
# how to get correlation
data3 <- data1
data3[] <- lapply(data1,as.integer)
# visualize it
library(corrplot)
#png(filename="Corr.png")
# corrplot(cor(data3))
par(mfrow=c(3,2))
hist(data1$sc_houding_gender[data1$v2==1], main = "boys", ylim = c(0, 2000)) #boys
hist(data1$sc_houding_gender[data1$v2==2], main = "girls", ylim = c(0, 2000)) #girls
hist(data1$sdqcon1[data1$v2==1], main = "boys", ylim = c(0, 2000)) #boys
hist(data1$sdqcon1[data1$v2==2], main = "girls", ylim = c(0, 2000)) #girls
hist(data1$sdqem1[data1$v2==1], main = "boys", ylim = c(0, 2000)) #boys
hist(data1$sdqem1[data1$v2==2], main = "girls", ylim = c(0, 2000)) #girls
#dev.off()
hist(data1$sc_houding_gender[data1$v2==1])
par(mfrow=c(3,2))
hist(data1$sc_houding_gender[data1$v2==1], main = "boys", ylim = c(0, 2000)) #boys
hist(data1$sc_houding_gender[data1$v2==2], main = "girls", ylim = c(0, 2000)) #girls
hist(data1$sdqcon1[data1$v2==1], main = "boys", ylim = c(0, 2000)) #boys
hist(data1$sdqcon1[data1$v2==2], main = "girls", ylim = c(0, 2000)) #girls
hist(data1$sdqem1[data1$v2==1], main = "boys", ylim = c(0, 2000)) #boys
hist(data1$sdqem1[data1$v2==2], main = "girls", ylim = c(0, 2000)) #girls
cor(data1$sc_houding_gender, data1$hetero)
ggplot(data=data1, aes(sc_houding_gender, sdqcon1)) +
geom_point(aes(colour = v2))
par(mfrow = c(1,1))
plot(data1$sc_houding_gender, data1$sdqcon1)
par(mfrow=c(1,2))
hist(data1$sc_houding_gender[data1$v2==1], main = "boys", ylim = c(0, 2000)) #boys
hist(data1$sc_houding_gender[data1$v2==2], main = "girls", ylim = c(0, 2000)) #girls
par(mfrow=c(1,2))
hist(data$sc_houding_gender[data1$v2==1], main = "boys", ylim = c(0, 2000)) #boys
hist(data$sc_houding_gender[data1$v2==2], main = "girls", ylim = c(0, 2000)) #girls
par(mfrow=c(1,2))
hist(data$sc_houding_gender[data1$v2==1], main = "boys", ylim = c(0, 2000)) #boys
hist(data$sc_houding_gender[data1$v2==2], main = "girls", ylim = c(0, 2000)) #girls
#dev.off()
hist(data1$sc_houding_gender[data1$v2==1])
hist(data1$sc_houding_gender[data1$v2==1], main = "boys", ylim = c(0, 2000)) #boys
hist(data1$sc_houding_gender[data1$v2==2], main = "girls", ylim = c(0, 2000)) #girls
hist(data$sc_houding_gender[data1$v2==1], main = "boys", ylim = c(0, 2000)) #boys
hist(data$sc_houding_gender[data1$v2==2], main = "girls", ylim = c(0, 2000)) #girls
hist(data1$sc_houding_gender[data1$v2==1], main = "boys", ylim = c(0, 2000)) #boys
hist(data1$sc_houding_gender[data1$v2==2], main = "girls", ylim = c(0, 2000)) #girls
install.packages("papaja", dep=T)
if(!"tinytex" %in% rownames(installed.packages())) install.packages("tinytex")
tinytex::install_tinytex()
if(!"devtools" %in% rownames(installed.packages())) install.packages("devtools")
devtools::install_github("crsh/papaja")
installed.packages()
install.packages("lavaan", dep=T)
install.packages("psych", dep=T)
install.packages("medmod", dep=T)
install.packages("psych", dep=T)
install.packages(c("emmeans", "QuantPsyc", "mediation", "rockchalk", "multilevel", "bda", "gvlma", "stargazer", dep=T))
lm
install.packages("emmeans", dependencies=TRUE);
install.packages("ggplot2", dependencies=TRUE)
r
R
library(devtools)
install_github('andreacirilloac/updateR')
library(updateR)
updateR(admin_password = 'Admin user password')
install.packages(as.vector(needed_packages))
> library(blogdown)
library(blogdown)
install.packages("prereg")
library(papaja)
# Install devtools package if necessary
if(!"devtools" %in% rownames(installed.packages())) install.packages("devtools")
# Install the stable development verions from GitHub
devtools::install_github("crsh/papaja")
# Install the latest development snapshot from GitHub
devtools::install_github("crsh/papaja@devel")
library(papaja)
library(prereg)
install.packages("here")
library(here)
i_am("/Users/ricci/GitHub/thesis_repo")
setwd("~/GitHub/thesis_repo")
here()
i_am("thesis_repo")
i_am("GitHub")
here()
setwd("~/GitHub/thesis_repo")
here
here()
i_am("Prereg_draft1.Rmd")
here()
i_am("Prereg_draft1.Rmd") #
knitr::opts_chunk$set(echo = TRUE)
library(here)
i_am("Prereg_draft1.Rmd") #
knitr::opts_chunk$set(echo = TRUE)
library(here)
i_am("Prereg_draft1.Rmd") #
